#!/usr/bin/env python2.7
# -----------------------------Copyright-------------------------------------
# NOTICE
#
# This software (or technical data) was produced for the U. S.
# Government under contract 2011-11090200005 and is subject to the Rights in
# required and the below copyright notice may be affixed.
#
# Copyright (c) 2014. All Rights Reserved.
# -----------------------------Copyright--------------------------------------
import os
from os.path import dirname as dirname, join as join, abspath as abspath
import sys
import shutil
import StringIO
from nose.tools import assert_equals

from stonesoup.utils.config_merger import ConfigMerger
from stonesoup.configuration import configuration
from stonesoup.tests.resources import configs

def test_config_merging():
    """Merge two configuration files.
    Functionality tested:   File output and memory output of merged configuration.
                            Values changed or added in the merge operation.
    """
    print >> sys.stderr, sys._getframe().f_code.co_name

    # Create output directory
    outdir = os.path.join(os.path.abspath(os.sep), 'opt', 'stonesoup', 'test')
    if not os.path.exists(outdir):
        os.mkdir(outdir)

    sample_path = join(dirname(configuration.__file__), 'sample.conf')
    test_file_path = join(dirname(configs.__file__), 'test_merge_config.ini')
    merged_config_path = join(outdir,'merged_config.ini')

    merger = ConfigMerger()
    merger.merge_configs(test_file_path, sample_path, merged_config_path)
    memory_output = StringIO.StringIO()
    merger.merge_configs(test_file_path, sample_path, memory_output)

    # Check that file and memory output are the same
    merged_config = open(merged_config_path, 'r')
    file_output = StringIO.StringIO()
    file_output.write(merged_config.read())
    assert_equals(file_output.getvalue(), memory_output.getvalue())

    # Check the merged configuration file
    configuration.create(merged_config_path)

    # Test value changed by merge
    assert_equals("8887", configuration.get_option("commapi", "portnum"))

    # Test entry not included in the file that was merged into the original
    assert_equals("analyze", configuration.get_option("suffixes", "analyze"))

    # Test entry not included in original config
    assert_equals("test", configuration.get_option("environment_variables", "SS_TEST_ENVVAR"))

    # Remove output directory
    if os.path.exists(outdir):
        shutil.rmtree(outdir)





