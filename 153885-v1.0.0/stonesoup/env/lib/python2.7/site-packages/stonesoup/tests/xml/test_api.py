# ------------------------------Copyright-------------------------------------
# NOTICE
#
# This software (or technical data) was produced for the U. S.
# Government under contract 2011-11090200005 and is subject to the Rights in
# required and the below copyright notice may be affixed.
#
# Copyright (c) 2013 Ponte Technologies. All Rights Reserved.
# -----------------------------Copyright--------------------------------------
import sys
from stonesoup.tests.resources import xml as XML_FILES
from stonesoup.metadata import *
from nose.tools import assert_equal, assert_not_equals
from lxml import etree
try:
    import cStringIO.StringIO as StringIO
except ImportError:
    from StringIO import StringIO

def get_xml_file_path():
    return  XML_FILES.get_file("api_metadata.xml")

def read_xml():
    path = get_xml_file_path()
    testcase = TestCase.load_xml(path)
    return testcase

def test_load_xml():
    print >> sys.stderr, sys._getframe().f_code.co_name
    testcase = read_xml()

    assert_not_equals(testcase, None)


def test_write_xml():
    print >> sys.stderr, sys._getframe().f_code.co_name
    testcase = read_xml()

    tc = testcase.dump_xml()
    assert_not_equals(tc, None)
    assert_not_equals(tc, '')

def test_equality():
    print >> sys.stderr, sys._getframe().f_code.co_name
    path = get_xml_file_path()


    original_xml_string=None

    with open(path, 'r+') as f:
        original_xml_string = f.read()

    assert_not_equals(original_xml_string, None)
    assert_not_equals(original_xml_string, '')

    testcase = read_xml()

    api_xml_string = testcase.dump_xml()

    assert_not_equals(api_xml_string.strip(), None)
    assert_not_equals(api_xml_string.strip(), '')

    parser = etree.XMLParser(remove_blank_text=True)
    original_xml = etree.fromstring(original_xml_string, parser)
    api_xml = etree.fromstring(api_xml_string, parser)

    xml_string_io1 = StringIO()
    original_xml.getroottree().write_c14n(xml_string_io1)
    cxml1 = xml_string_io1.getvalue()

    xml_string_io2 = StringIO()
    api_xml.getroottree().write_c14n(xml_string_io2)
    cxml2 = xml_string_io2.getvalue()

#     orig_cn14 = XML_FILES.get_file("original_cn14.xml")
#     api_cn14 = XML_FILES.get_file("api_cn14.xml")
#
#     with open(orig_cn14, 'w') as f:
#         f.write(cxml1)
#
#     with open(api_cn14, 'w') as f:
#         f.write(cxml2)

    assert_equal(cxml1, cxml2)

